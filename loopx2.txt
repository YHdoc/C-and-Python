#include <stdio.h>	//이번 코드에서는 cs50이나 string 헤더파일의 함수를 사용할 일이 없었습니다. 그래서 stdio.h만 불러왔습니다.
int main(void)
{
    int arr[6][5] = {{1, 2, 3, 4, 5}, {6, 7, 8, 9, 10}, {11, 12, 13, 14, 15}, {16, 17, 18, 19, 20}, {21, 22, 23, 24, 25}, {26, 27, 28, 29, 30}};
//배열을 선언하는 부분입니다. 정수 다섯 개를 요소로 가지는 배열 여섯 개가 arr이라는 하나의 큰 배열을 이루고 있습니다. 각각의 정수에 접근하기 위해서는 이차원 배열을 만들어 접근해야 합니다. 
arr이라는 하나의 큰 배열에서 1이라는 정수는 arr[0][0]이라는 인덱스를 가집니다. 0번째 중괄호원소의 0번째 자리에 있기 때문입니다. 같은 맥락에서 30은 arr[5][4]의 자리를 가집니다.
*그럼에도 int arr의 선언에서 대괄호[] 안에 6,5가 오는 이유는, 그 자리에는 눈에 보이는 원소의 개수가 들어가기 때문이라고 이해하고 있습니다. 중괄호 배열원소가 6개, 또 그 안에는 정수 원소가 5개씩 있기 때문입니다. 
(이 부분을 정리하면서 헷갈렸는데 제가 틀리게 이해하고 있는 것은 아닌가 의심이 많이 갑니다ㅜㅜ 혹 그렇다면 꼭 말씀주신다면 감사드립니다!)
    
    for (int i=5; i>=0; i--)	//바깥 원소(중괄호 원소)에 접근하는 for문입니다. 출력 예시에서는, 26부터 30까지의 마지막 바깥원소가 먼저 출력됩니다. 그렇기에 인덱스는 5부터 0까지 거꾸로 가야 합니다. 
    {
        for (int j=0; j<5; j++)	//내부 원소(정수 원소)에 접근하는 for문입니다. 정수 원소의 경우 1부터 5까지, 26부터 30까지 오름차순으로 출력이 되어야 하기 때문에 인덱스가 0부터 4까지 순차적으로 가야 합니다.
        {
            printf("%i\t", arr[i][j]);	//위 이중for문에 따라서 반복문은 arr[5][0]-arr[5][1]-arr[5][2]...arr[0][3]-arr[0][4]까지 출력을 진행할 것입니다.
        }
        printf("\n");	//i가 1씩 감소할 때마다 줄바꿈을 해주는 부분입니다. 
26부터 30까지 출력이 되면 줄바꿈을 하여 21부터 25까지가 출력되도록 합니다.
    }
}
