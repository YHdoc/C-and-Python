//#include<stdio.h>
//
//void main()
//{
//	//이전까지는 분기문으로 무언가를 구분하는 것을 배웠다. if와 삼항, switch.
//	int level = 1;
//	if (level <= 10)
//	{
//		printf("전직이 불가능합니다.\n");
//	}
//	else
//	{
//		printf("전직이 가능합니다.\n");
//	}
//	여기까지 코드를 만들었을 때 : 게임 키고 전직 할수 있는지 없는지 판별하고 그냥 꺼지는 것, 종료.
//	그럼 게임이라 할 수 없겠다. 게임이라는 것은 기본적으로 반복이 되어야 한다. 어떤 동작이 반복되어야 하는 것.
//	반복이라는 것은 무한해야 함. 어디서 멈추는 것이 아님. 그래서 나온 것이 반복문이다.
//	내가 특정 조건을 줄 때, 그 조건을 만족할 때, 그 조건이 거짓이 될 때까지 반복을 계속하는 것이 반복문이다.
//	
//}

#include<stdio.h>

void main()
{
	//int i = 0;
	//while (i < 10)//i는 10보다 작다라는 관계도를 적어줌.
	//{
	//	printf("%d", i);
	//	printf("A\n");
	//	i += 1;
	//}
	//printf("반복문을 탈출합니다.\n");
	int level = 0;
	int exp = 0;
	int getexp = 0;

	while (exp >= 0)	//exp가 0이상인 경우에만 실행되므로, 만약 음수를 입력하여 exp가 0 밑으로 내려가게 된다면 반복문이 실행되지 않는다.
	{
		printf("획득할 경험치를 적어주세요 : ");
		scanf_s("%d", &getexp);

		exp += getexp;
		printf("경험치 %d 만큼을 획득하여 현재 경험치 %d 만큼을 가지고 있습니다.\n", getexp, exp);

		
		if (level == 0)
		{
			printf("레벨은 %d입니다.\n", level);
			printf("경험치는 %d입니다.\n", exp);
			if (exp >= 100)
			{
				level += 1;
				exp = exp - level * 100;
				printf("\n레벨은 %d입니다.\n", level);
				printf("\n경험치는 %d입니다.\n", exp);
			}
		}
		
		while (level != 0 && level*100 <= exp)	//레벨업을 위해 해당레벨에 100을 곱한 수 이상 만큼의 경험치를 얻어야 한다는 조건을 달았다. 
		{											//그런데 여기서 문제가 있다. 만약 9999경험치를 한번에 획득하면, 레벨이 그만큼 한번에 오르는 것이 아니라 1씩 오른다. 어찌됐든 1씩 오르는거임.. 레벨업을 시키려면 일일이 해당 경험치의 레벨이 될 때까지 0을 입력해주어야 한다는 번거로움이 있다.
													//이 문제를 해결하려면 어떻게 해야할까? 간단하다. else if부분을 while으로 바꿔주면 된다. 그러면 해당 경험치의 레벨이 될 때까지 저절로 레벨업을 하도록 된다. 이중 while문.
													//지금 여기서 while이라고 되어있는 부분은 원래 else if로 설정해놓았던 부분이다.
		
			exp = exp - level * 100;	//레벨업 하는데 쓰이고 남은 경험치를 출력하도록 한다. ex) 레벨 1 되는데 필요한 경험치 = 100. 만약 150경험치를 얻었다면 레벨 2되고 남은 경험치는 50.
			level += 1;		//레벨은 1 올라간다
			printf("레벨은 %d입니다.\n", level);
			printf("경험치는 %d입니다.\n", exp);

			continue;//이어하기 -> 되돌아가라는 명령어 -> 어디로? 반복문의 조건으로 되돌아가서 반복문을 다시 시작하라는 것. 즉, 무언가를 되돌리고 싶을 때  사용하는 것이다.
				//좀 더 이해하기 쉽게 말하자면, 밑의 break문을 실행하지 말고 조건을 만족할 때까지(여기서는 무한히) 위의 반복문을 시행하라는 것이다.
			break; //반복문을 끝내는 명령어. 위에 continue가 있으므로 여기서 break는 영원히 동작하지 않는다.
		}
	
	}

}